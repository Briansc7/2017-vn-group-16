options {
	STATIC = false ;
}

PARSER_BEGIN(Parser)

package parser;

import java.io.Reader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;

public class Parser {
	static public List<String> parsear(String indicador) throws ParseException, TokenMgrError {
	  	Reader reader = new StringReader(indicador);
		Parser parser = new Parser(reader);
		return parser.Expression();
	}
}

PARSER_END(Parser)


SKIP : { " " | "\t" | "\n" | "\r" }
TOKEN : { < OPERADOR : (["+","-","*","/"]){1} > }
TOKEN : { < OPENPAR : "(" > | < CLOSEPAR : ")" > }
TOKEN : { < NUMERO : (["0"-"9"])+ >}
TOKEN : { < PALABRA : ("i." | "c.")(["a"-"z","A"-"Z"])+ > }


List<String> Expression() :
{
	List<String> palabras = new ArrayList<String>();
}
{
	Primary(palabras)
	(
		<OPERADOR>
		Primary(palabras)
	)*
	//<EOF>
	{ return palabras; }
}

void Primary(List<String> lista) :
{
	List<String> sublista;
	Token t;
}
{
	<NUMERO> 
	|
	t=<PALABRA>
	{ if(t.image.substring(0,2).equalsIgnoreCase("i.")) {
		 lista.add(t.image.substring(2));
	  } else {
	     lista.add(t.image);
	  }
	}
	|
	<OPENPAR> sublista=Expression() <CLOSEPAR>
	{ lista.addAll(sublista); }
}